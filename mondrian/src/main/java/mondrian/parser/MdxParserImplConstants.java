/* Decompiler 38ms, total 328ms, lines 104 */
package mondrian.parser;

public interface MdxParserImplConstants {
    int EOF = 0;
    int AND = 1;
    int AS = 2;
    int AXIS = 3;
    int BEGIN = 4;
    int BY = 5;
    int CASE = 6;
    int CAST = 7;
    int CELL = 8;
    int CHAPTERS = 9;
    int CREATE = 10;
    int COLUMNS = 11;
    int COMMIT = 12;
    int CUBE = 13;
    int DIMENSION = 14;
    int DRILLTHROUGH = 15;
    int ELSE = 16;
    int EMPTY = 17;
    int END = 18;
    int EXPLAIN = 19;
    int FIRSTROWSET = 20;
    int FOR = 21;
    int FROM = 22;
    int IN = 23;
    int IS = 24;
    int MATCHES = 25;
    int MAXROWS = 26;
    int MEMBER = 27;
    int NON = 28;
    int NOT = 29;
    int NULL = 30;
    int ON = 31;
    int OR = 32;
    int PAGES = 33;
    int PLAN = 34;
    int PROPERTIES = 35;
    int REFRESH = 36;
    int RETURN = 37;
    int ROLLBACK = 38;
    int ROWS = 39;
    int SECTIONS = 40;
    int SELECT = 41;
    int SESSION = 42;
    int SET = 43;
    int THEN = 44;
    int TRAN = 45;
    int TRANSACTION = 46;
    int UPDATE = 47;
    int USE_EQUAL_ALLOCATION = 48;
    int USE_EQUAL_INCREMENT = 49;
    int USE_WEIGHTED_ALLOCATION = 50;
    int USE_WEIGHTED_INCREMENT = 51;
    int WHEN = 52;
    int WHERE = 53;
    int XOR = 54;
    int WITH = 55;
    int EXISTING = 56;
    int $SYSTEM = 57;
    int SINGLE_LINE_COMMENT = 67;
    int FORMAL_COMMENT = 68;
    int MULTI_LINE_COMMENT = 69;
    int ASTERISK = 71;
    int BANG = 72;
    int COLON = 73;
    int COMMA = 74;
    int CONCAT = 75;
    int DOT = 76;
    int EQ = 77;
    int GE = 78;
    int GT = 79;
    int LBRACE = 80;
    int LE = 81;
    int LPAREN = 82;
    int LT = 83;
    int MINUS = 84;
    int NE = 85;
    int PLUS = 86;
    int RBRACE = 87;
    int RPAREN = 88;
    int SOLIDUS = 89;
    int ATSIGN = 90;
    int UNSIGNED_INTEGER_LITERAL = 91;
    int APPROX_NUMERIC_LITERAL = 92;
    int DECIMAL_NUMERIC_LITERAL = 93;
    int EXPONENT = 94;
    int SINGLE_QUOTED_STRING = 95;
    int DOUBLE_QUOTED_STRING = 96;
    int WHITESPACE = 97;
    int ID = 98;
    int QUOTED_ID = 99;
    int AMP_QUOTED_ID = 100;
    int AMP_UNQUOTED_ID = 101;
    int LETTER = 102;
    int DIGIT = 103;
    int DEFAULT = 0;
    int IN_SINGLE_LINE_COMMENT = 1;
    int IN_FORMAL_COMMENT = 2;
    int IN_MULTI_LINE_COMMENT = 3;
    String[] tokenImage = new String[]{"<EOF>", "\"AND\"", "\"AS\"", "\"AXIS\"", "\"BEGIN\"", "\"BY\"", "\"CASE\"", "\"CAST\"", "\"CELL\"", "\"CHAPTERS\"", "\"CREATE\"", "\"COLUMNS\"", "\"COMMIT\"", "\"CUBE\"", "\"DIMENSION\"", "\"DRILLTHROUGH\"", "\"ELSE\"", "\"EMPTY\"", "\"END\"", "\"EXPLAIN\"", "\"FIRSTROWSET\"", "\"FOR\"", "\"FROM\"", "\"IN\"", "\"IS\"", "\"MATCHES\"", "\"MAXROWS\"", "\"MEMBER\"", "\"NON\"", "\"NOT\"", "\"NULL\"", "\"ON\"", "\"OR\"", "\"PAGES\"", "\"PLAN\"", "\"PROPERTIES\"", "\"REFRESH\"", "\"RETURN\"", "\"ROLLBACK\"", "\"ROWS\"", "\"SECTIONS\"", "\"SELECT\"", "\"SESSION\"", "\"SET\"", "\"THEN\"", "\"TRAN\"", "\"TRANSACTION\"", "\"UPDATE\"", "\"USE_EQUAL_ALLOCATION\"", "\"USE_EQUAL_INCREMENT\"", "\"USE_WEIGHTED_ALLOCATION\"", "\"USE_WEIGHTED_INCREMENT\"", "\"WHEN\"", "\"WHERE\"", "\"XOR\"", "\"WITH\"", "\"EXISTING\"", "\"$SYSTEM\"", "\" \"", "\"\\t\"", "\"\\n\"", "\"\\r\"", "\"\\f\"", "<token of kind 63>", "\"//\"", "\"--\"", "\"/*\"", "<SINGLE_LINE_COMMENT>", "\"*/\"", "\"*/\"", "<token of kind 70>", "\"*\"", "\"!\"", "\":\"", "\",\"", "\"||\"", "\".\"", "\"=\"", "\">=\"", "\">\"", "\"{\"", "\"<=\"", "\"(\"", "\"<\"", "\"-\"", "\"<>\"", "\"+\"", "\"}\"", "\")\"", "\"/\"", "\"@\"", "<UNSIGNED_INTEGER_LITERAL>", "<APPROX_NUMERIC_LITERAL>", "<DECIMAL_NUMERIC_LITERAL>", "<EXPONENT>", "<SINGLE_QUOTED_STRING>", "<DOUBLE_QUOTED_STRING>", "<WHITESPACE>", "<ID>", "<QUOTED_ID>", "<AMP_QUOTED_ID>", "<AMP_UNQUOTED_ID>", "<LETTER>", "<DIGIT>"};
}